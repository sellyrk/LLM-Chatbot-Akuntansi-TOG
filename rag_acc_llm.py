import pandas as pd
import requests
import json

# ==== 1. Load CSV ====
df = pd.read_csv("transaksi.csv", sep=";")
df.columns = df.columns.str.strip()
df['Tanggal'] = pd.to_datetime(df['Tanggal'], dayfirst=True)
df['Jumlah'] = df['Jumlah'].str.replace('_', '').astype(int)

print("CSV loaded, sample:")
print(df.head())

# ==== Input pertanyaan ====
pertanyaan = input("\nMasukkan pertanyaan akuntansi: ")

# ==== Prompt Revised ====
prompt = f"""
Kamu adalah asisten data accounting.
File CSV memiliki kolom: Tanggal (datetime), Jenis (Pemasukan/Pengeluaran), Kategori, Jumlah (int), Deskripsi.
Buatkan satu baris kode Python pandas untuk menjawab pertanyaan berikut dengan cara filtering dan mengambil kolom ['Tanggal', 'Deskripsi', 'Jumlah'] sesuai pertanyaan, lalu simpan hasilnya dalam variabel 'jawaban'.

Pastikan:
- jawaban adalah DataFrame hasil filter yang sudah siap ditampilkan
- Menggunakan df yang sudah tersedia
- Hanya kirim satu baris kode tanpa penjelasan, awali hanya dengan jawaban kode

Pertanyaan: "{pertanyaan}"
"""

response = requests.post(
    'http://localhost:11434/api/generate',
    json={"model": "llama3", "prompt": prompt},
    stream=True
)

# ==== Parsing LLaMA Response ====
result = ""
for chunk in response.iter_lines():
    if chunk:
        try:
            data = json.loads(chunk.decode('utf-8'))
            if 'response' in data:
                result += data['response']
        except Exception:
            continue

# ==== Clean Up Result ====
result = result.strip().strip('`').replace('```python', '').replace('```', '').strip()

print("\n=== Kode Generated by LLaMA ===")
print(result)

# ==== Execute generated code safely ====
try:
    exec_globals = {'df': df, 'pd': pd}
    exec(result, exec_globals)
    jawaban = exec_globals.get('jawaban', None)

    if jawaban is not None and not jawaban.empty:
        print(f"\n‚úÖ Jawaban LLaMA:")
        total = jawaban['Jumlah'].sum()
        print(f"\nDetail transaksi:")
        for idx, row in jawaban.iterrows():
            print(f"‚Ä¢ Rp{row['Jumlah']:,} ({row['Deskripsi']}) pada {row['Tanggal'].strftime('%d-%m-%Y')}")
        print(f"\nTotal: Rp{total:,}")

        print(f"\nüìä Tabel transaksi:\n")
        print(jawaban.to_markdown(index=False))
    else:
        print("\n‚ö†Ô∏è Tidak ada transaksi yang sesuai dengan pertanyaan.")

except Exception as e:
    print(f"\n‚ùå Error saat eksekusi: {e}")